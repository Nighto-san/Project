from icecream import ic
def test(func_name, args, expected_answers):
  """
  –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é —Å –∑–∞–¥–∞–Ω–Ω—ã–º–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏ –∏ –æ–∂–∏–¥–∞–µ–º—ã–º–∏ –æ—Ç–≤–µ—Ç–∞–º–∏.

  Args:
    func_name: –°—Ç—Ä–æ–∫–∞, –∏–º—è —Ç–µ—Å—Ç–∏—Ä—É–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
    args: –°–ø–∏—Å–æ–∫ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏.
    expected_answers: –°–ø–∏—Å–æ–∫ –æ–∂–∏–¥–∞–µ–º—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.
  """

  import sys
  module_name = sys._getframe(1).f_globals['__name__']
  module = sys.modules[module_name]
  func = getattr(module, func_name)

  for i, arg in enumerate(args):
    ic.includeContext
    try:
      result = func(arg)
    except Exception as e:
      print(f"üìõ –û—à–∏–±–∫–∞ –¥–ª—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞ '{arg}': {e}")
    else:
      expected = expected_answers[i]
      if result == expected:
        print(f"‚úÖ  {expected} üîÄ {result}   –î–ª—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞ '{arg}'")
      else:
        print(f"‚ùå  {expected} üîÄ {result}   –î–ª—è –∞—Ä–≥—É–º–µ–Ω—Ç–∞ '{arg}'")
